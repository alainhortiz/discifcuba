<?php

namespace AppBundle\Repository;

use AppBundle\Entity\DiagnosticoMedico;
use Doctrine\ORM\EntityRepository;
use Exception;

/**
 * DiagnosticoMedicoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DiagnosticoMedicoRepository extends EntityRepository
{
    public function agregarDiagnosticoMedico($data)
    {
        try {
            $em = $this->getEntityManager();
            $diagnosticoMedico = new DiagnosticoMedico();
            $this->saveDiagnostico($diagnosticoMedico,$data);

            $em->persist($diagnosticoMedico);
            $em->flush();
            $msg = $diagnosticoMedico;

        } catch (Exception $e) {
            if (strpos($e->getMessage(), 'Duplicate entry') > 0) {
                $msg = 'El diagnóstico médico ya existe, no se puede agregar';
            } else {
                $msg = 'Se produjo un error al insertar el diagnóstico médico';
            }
        }
        return $msg;
    }

    public function modificarDiagnosticoMedico($data)
    {
        try {
            $em = $this->getEntityManager();
            $diagnosticoMedico = $em->getRepository('AppBundle:DiagnosticoMedico')->find($data['id']);

            if (!empty($diagnosticoMedico)) {
                $this->saveDiagnostico($diagnosticoMedico,$data);

                $em->flush();
                $msg = $diagnosticoMedico;
            } else {
                $msg = $diagnosticoMedico;
            }

        } catch (Exception $e) {
            $msg = 'Se produjo un error al modificar el diagnóstico médico';
        }

        return $msg;
    }

    public function eliminarDiagnosticoMedico($id)
    {
        try {
            $em = $this->getEntityManager();
            $diagnosticoMedico = $em->getRepository('AppBundle:DiagnosticoMedico')->find($id);

            if (!empty($diagnosticoMedico)) {
                $em->remove($diagnosticoMedico);
                $em->flush();
                $msg = $diagnosticoMedico;
            } else {
                $msg = $diagnosticoMedico;
            }

        } catch (Exception $e) {

            $msg = 'Se produjo un error al eliminar el diagnóstico médico';

        }
        return $msg;
    }

    private function saveDiagnostico($diagnosticoMedico,$data){
        $diagnosticoMedico->setNombre($data['nombre']);
    }

}
